/*테이블 초기화*/
DROP TABLE STUDENT;
DROP TABLE TEACHER;
DROP TABLE PARENTS;
DROP TABLE MEMO;
DROP TABLE HOMEWORK;
DROP TABLE HM_SUBMIT;
DROP TABLE NOTICE;
DROP TABLE COUNSEL;
DROP TABLE AFTERSCHOOL_STUDENT;
DROP TABLE ATTENDANCE;
DROP TABLE AFTERSCHOOL_BOARD;
DROP TABLE PICTURE_BOARD;
DROP TABLE CHAT;
DROP TABLE PARENTS_BOARD;
DROP TABLE PARENTS_BOARD_REPLY;
DROP TABLE AFTERSCHOOL;
DROP TABLE HOMEWORK_FILE;
DROP TABLE HM_SUBMIT_FILE;
DROP TABLE SCHOOL_LIST;
DROP TABLE STU_PROFILE;
DROP TABLE SUBJECT;

/*시퀀스 초기화*/
DROP SEQUENCE SEQ_PIC_BOARD;
DROP SEQUENCE SEQ_HOMEWORK_BOARD;
DROP SEQUENCE SEQ_AFTERSCHOOL_BOARD;
DROP SEQUENCE SEQ_PARENTS_BOARD;
DROP SEQUENCE SEQ_REPLY;
DROP SEQUENCE SEQ_NOTICE;
DROP SEQUENCE SEQ_MEMO;
DROP SEQUENCE SEQ_COUNSEL;

/*시퀀스 생성*/
CREATE SEQUENCE SEQ_PIC_BOARD;
CREATE SEQUENCE SEQ_HOMEWORK_BOARD;
CREATE SEQUENCE SEQ_AFTERSCHOOL_BOARD;
CREATE SEQUENCE SEQ_PARENTS_BOARD;
CREATE SEQUENCE SEQ_REPLY;
CREATE SEQUENCE SEQ_NOTICE;
CREATE SEQUENCE SEQ_MEMO;
CREATE SEQUENCE SEQ_COUNSEL;

/*학생 테이블*/
CREATE TABLE STUDENT (
	STU_ID	VARCHAR2(100)	PRIMARY KEY,
	STU_PWD 	VARCHAR2(100)	NOT NULL,
    CLASS_CODE	VARCHAR2(100),
	STU_NAME	VARCHAR2(50)	NOT NULL,
	PHONE	VARCHAR2(50)	NOT NULL,
	STU_NUM	NUMBER		DEFAULT 00,
	STATUS	VARCHAR2(50)	DEFAULT 'N' CHECK(STATUS IN('Y','N')),
    PIC_NO NUMBER DEFAULT 1,
    STU_QUESTION VARCHAR2(50) NOT NULL,
    STU_ANSWER VARCHAR2(1000) NOT NULL
);
COMMENT ON COLUMN STUDENT.STU_ID IS '학생아이디';

COMMENT ON COLUMN STUDENT.STU_PWD IS '학생비밀번호';

COMMENT ON COLUMN STUDENT.STU_NAME IS '이름';

COMMENT ON COLUMN STUDENT.PHONE IS '전화번호';

COMMENT ON COLUMN STUDENT.STU_NUM IS '번호';

COMMENT ON COLUMN STUDENT.STATUS IS '승인상태(승인됨:Y,아직안됨:N)';

COMMENT ON COLUMN STUDENT.CLASS_CODE IS '반코드';

COMMENT ON COLUMN STUDENT.PIC_NO IS '프로필사진번호';

COMMENT ON COLUMN STUDENT.STU_QUESTION IS '본인확인질문';

COMMENT ON COLUMN STUDENT.STU_ANSWER IS '질문답';


/*교직원 테이블*/
CREATE TABLE TEACHER (
	TC_ID	VARCHAR2(100),
	CLASS_CODE	VARCHAR2(100)	DEFAULT '0000',
	TC_PWD	VARCHAR2(100)		NOT NULL,
	SC_CODE	VARCHAR2(100)		,
	TC_NAME	VARCHAR2(50)		NOT NULL,
	PHONE	VARCHAR2(50)		NOT NULL,
	STATUS	VARCHAR2(50)		DEFAULT 'N' CHECK(STATUS IN('Y','N','A')),
    TC_QUESTION VARCHAR2(50),
    TC_ANSWER VARCHAR2(1000),
    PRIMARY KEY(TC_ID, CLASS_CODE)
);
COMMENT ON COLUMN TEACHER.TC_ID IS '교직원아이디';

COMMENT ON COLUMN TEACHER.CLASS_CODE IS '반코드';

COMMENT ON COLUMN TEACHER.TC_PWD IS '교직원비밀번호';

COMMENT ON COLUMN TEACHER.SC_CODE IS '학교코드';

COMMENT ON COLUMN TEACHER.TC_NAME IS '이름';

COMMENT ON COLUMN TEACHER.PHONE IS '전화번호';

COMMENT ON COLUMN TEACHER.STATUS IS '승인상태(Y:승인됨 N:아직안됨 A:관리자)';

COMMENT ON COLUMN TEACHER.TC_QUESTION IS '본인확인질문';

COMMENT ON COLUMN TEACHER.TC_ANSWER IS '질문답';


/*학부모 테이블*/
CREATE TABLE PARENTS (
	PR_ID	VARCHAR2(100)		NOT NULL,
	PR_PWD	VARCHAR2(100)		NOT NULL,
	PR_NAME	VARCHAR2(50)		NOT NULL,
	PHONE	VARCHAR2(50)		NOT NULL,
	NICKNAME	VARCHAR2(50)		NULL,
    PR_QUESTION VARCHAR2(50) NOT NULL,
    PR_ANSWER VARCHAR2(1000) NOT NULL
);
COMMENT ON COLUMN PARENTS.PR_ID IS '학부모아이디';

COMMENT ON COLUMN PARENTS.PR_PWD IS '학부모비밀번호';

COMMENT ON COLUMN PARENTS.PR_NAME IS '이름';

COMMENT ON COLUMN PARENTS.PHONE IS '전화번호';

COMMENT ON COLUMN PARENTS.NICKNAME IS '닉네임';

COMMENT ON COLUMN PARENTS.PR_QUESTION IS '본인확인질문';

COMMENT ON COLUMN PARENTS.PR_ANSWER IS '질문답';


/*지각/결석 테이블*/
CREATE TABLE ATTENDANCE (
	ADATE	DATE DEFAULT SYSDATE,
	STU_ID	VARCHAR2(100),
	LA	VARCHAR2(50) DEFAULT 'AT' CHECK(LA IN ('TA','AB','AT')),
    PRIMARY KEY(ADATE,STU_ID)
);
COMMENT ON COLUMN ATTENDANCE.ADATE IS '날짜';

COMMENT ON COLUMN ATTENDANCE.STU_ID IS '학생아이디';

COMMENT ON COLUMN ATTENDANCE.LA IS '지각/결석/출석(지각:TA,결석:AB,출석:AT)';


/*메모 테이블*/
CREATE TABLE MEMO (
	MEMO_NO NUMBER PRIMARY KEY,
	TC_ID	VARCHAR2(100)		NOT NULL,
	CLASS_CODE	VARCHAR2(100)		NOT NULL,
	MM_CONTENT	VARCHAR2(4000)		NULL
);
COMMENT ON COLUMN MEMO.MEMO_NO IS '교직원아이디';

COMMENT ON COLUMN MEMO.TC_ID IS '교직원아이디';

COMMENT ON COLUMN MEMO.CLASS_CODE IS '반코드';

COMMENT ON COLUMN MEMO.MM_CONTENT IS '내용';


/*공지사항 테이블*/
CREATE TABLE NOTICE (
	NOTICE_NO	NUMBER		PRIMARY KEY,
	TC_ID		VARCHAR2(100)		NOT NULL,
	CLASS_CODE	VARCHAR2(100)		NOT NULL,
	NT_CONTENT	VARCHAR2(4000)		NULL,
	CREATE_DATE	DATE		DEFAULT SYSDATE
);
COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';

COMMENT ON COLUMN NOTICE.NT_CONTENT IS '내용';

COMMENT ON COLUMN NOTICE.CREATE_DATE IS '게시일';

COMMENT ON COLUMN NOTICE.TC_ID IS '교직원아이디';

COMMENT ON COLUMN NOTICE.CLASS_CODE IS '반코드';


/*숙제 테이블*/
CREATE TABLE HOMEWORK (
	BO_NO	NUMBER		 PRIMARY KEY,
	TC_ID	VARCHAR2(100),
	CLASS_CODE	VARCHAR2(100)		NOT NULL,
	HM_TITLE	VARCHAR2(100)		NOT NULL,
	DEADLINE	DATE		NOT NULL,
	HM_CONTENT	VARCHAR2(4000)		NOT NULL,
	CREAT_DATE	DATE		DEFAULT SYSDATE,
	SUBJECT	VARCHAR2(100)		NOT NULL
);
COMMENT ON COLUMN HOMEWORK.BO_NO IS '게시판번호';

COMMENT ON COLUMN HOMEWORK.TC_ID IS '교직원아이디';

COMMENT ON COLUMN HOMEWORK.CLASS_CODE IS '반코드';

COMMENT ON COLUMN HOMEWORK.HM_TITLE IS '숙제제목';

COMMENT ON COLUMN HOMEWORK.DEADLINE IS '숙제마감일';

COMMENT ON COLUMN HOMEWORK.HM_CONTENT IS '숙제내용';

COMMENT ON COLUMN HOMEWORK.CREAT_DATE IS '작성일';

COMMENT ON COLUMN HOMEWORK.SUBJECT IS '과목';


/*숙제첨부파일 테이블*/
CREATE TABLE HOMEWORK_FILE (
	BO_NO	NUMBER		PRIMARY KEY,
	ORIGIN_NAME	VARCHAR2(4000)		NOT NULL,
    CHANGE_NAME VARCHAR2(4000)		NOT NULL
);
COMMENT ON COLUMN HOMEWORK_FILE.BO_NO IS '게시판번호';

COMMENT ON COLUMN HOMEWORK_FILE.ORIGIN_NAME IS '원본이름';

COMMENT ON COLUMN HOMEWORK_FILE.CHANGE_NAME IS '바뀐이름';


/*숙제제출 테이블*/
CREATE TABLE HM_SUBMIT (
   STU_ID   VARCHAR2(100),
   BO_NO   NUMBER      NOT NULL,
   HM_STUCONTENT   VARCHAR2(4000),
   SCORE   NUMBER,
   TC_COMMENT   VARCHAR2(4000),
   CREATE_DATE   DATE      DEFAULT SYSDATE,
   STATUS   VARCHAR2(50)   DEFAULT 'N' CHECK(STATUS IN ('Y','N')),
    ORIGIN_NAME   VARCHAR2(2000),
   CHANGE_NAME   VARCHAR2(2000),
    PRIMARY KEY(STU_ID, BO_NO)
);
COMMENT ON COLUMN HM_SUBMIT.STU_ID IS '학생아이디';

COMMENT ON COLUMN HM_SUBMIT.BO_NO IS '게시판번호';

COMMENT ON COLUMN HM_SUBMIT.HM_STUCONTENT IS '숙제내용';

COMMENT ON COLUMN HM_SUBMIT.SCORE IS '점수';

COMMENT ON COLUMN HM_SUBMIT.TC_COMMENT IS '선생님말씀';

COMMENT ON COLUMN HM_SUBMIT.CREATE_DATE IS '제출일';

COMMENT ON COLUMN HM_SUBMIT.STATUS IS '제출상태(제출:Y,미제출:N)';

COMMENT ON COLUMN HM_SUBMIT.ORIGIN_NAME IS '첨부파일원래이름';

COMMENT ON COLUMN HM_SUBMIT.CHANGE_NAME IS '첨부파일바뀐이름';



/*숙제제출첨부파일 테이블*/
CREATE TABLE HM_SUBMIT_FILE (
	STU_ID	VARCHAR2(100)		NOT NULL,
	BO_NO	NUMBER		NOT NULL,
	ORIGIN_NAME	VARCHAR2(4000)		NOT NULL,
    CHANGE_NAME VARCHAR2(4000)		NOT NULL,
    PRIMARY KEY(STU_ID,BO_NO)
);
COMMENT ON COLUMN HM_SUBMIT_FILE.STU_ID IS '학생아이디';

COMMENT ON COLUMN HM_SUBMIT_FILE.BO_NO IS '게시판번호';

COMMENT ON COLUMN HM_SUBMIT_FILE.ORIGIN_NAME IS '원본이름';

COMMENT ON COLUMN HM_SUBMIT_FILE.CHANGE_NAME IS '바뀐이름';


/* 상담 테이블*/
CREATE TABLE COUNSEL (
	CS_NO NUMBER PRIMARY KEY,
	CS_DATE	DATE UNIQUE,
	TC_ID	VARCHAR2(100) NOT NULL,
	PR_ID	VARCHAR2(100),
	CS_LOCATION	VARCHAR2(100)		NOT NULL,
	CS_CONTENT	VARCHAR2(4000)
);
COMMENT ON COLUMN COUNSEL.CS_NO IS '상담번호';

COMMENT ON COLUMN COUNSEL.CS_DATE IS '상담일시';

COMMENT ON COLUMN COUNSEL.TC_ID IS '교직원아이디';

COMMENT ON COLUMN COUNSEL.PR_ID IS '학부모아이디';

COMMENT ON COLUMN COUNSEL.CS_LOCATION IS '위치';

COMMENT ON COLUMN COUNSEL.CS_CONTENT IS '상담내용';


/*방과후 테이블*/
CREATE TABLE AFTERSCHOOL (
	CODE	VARCHAR2(100)		PRIMARY KEY,
	TC_ID	VARCHAR2(100)		NOT NULL,
	CLASS_NAME	VARCHAR2(100)		NULL,
	EXPLANATION	VARCHAR2(4000)		NULL
);
COMMENT ON COLUMN AFTERSCHOOL.CODE IS '참여코드';

COMMENT ON COLUMN AFTERSCHOOL.TC_ID IS '교직원아이디';

COMMENT ON COLUMN AFTERSCHOOL.CLASS_NAME IS '반이름';

COMMENT ON COLUMN AFTERSCHOOL.EXPLANATION IS '설명';


/*방과후학생 테이블*/
CREATE TABLE AFTERSCHOOL_STUDENT (
	STU_ID	VARCHAR2(100),
	CODE	VARCHAR2(100),
	STATUS	VARCHAR2(50)	DEFAULT 'N',
    PRIMARY KEY(STU_ID,CODE)
);
COMMENT ON COLUMN AFTERSCHOOL_STUDENT.STU_ID IS '학생아이디';

COMMENT ON COLUMN AFTERSCHOOL_STUDENT.CODE IS '참여코드';

COMMENT ON COLUMN AFTERSCHOOL_STUDENT.STATUS IS '승인상태';


/*방과후게시판 테이블*/
CREATE TABLE AFTERSCHOOL_BOARD (
	BO_NO	NUMBER	 PRIMARY KEY,
	STU_ID	VARCHAR2(100)		NOT NULL,
	CODE	VARCHAR2(100)		NOT NULL,
	TITLE	VARCHAR2(100)		NOT NULL,
	BO_CONTENT	VARCHAR2(4000)		NOT NULL,
	CREATE_DATE	DATE	DEFAULT SYSDATE,
	ORIGIN_NAME	VARCHAR2(4000),
	CHANGE_NAME	VARCHAR2(4000)
);
COMMENT ON COLUMN AFTERSCHOOL_BOARD.BO_NO IS '게시판번호';

COMMENT ON COLUMN AFTERSCHOOL_BOARD.STU_ID IS '학생아이디';

COMMENT ON COLUMN AFTERSCHOOL_BOARD.CODE IS '참여코드';

COMMENT ON COLUMN AFTERSCHOOL_BOARD.TITLE IS '제목';

COMMENT ON COLUMN AFTERSCHOOL_BOARD.BO_CONTENT IS '내용';

COMMENT ON COLUMN AFTERSCHOOL_BOARD.CREATE_DATE IS '작성일';


/*행사사진게시판 테이블*/
CREATE TABLE PICTURE_BOARD (
	BO_NO	NUMBER	 PRIMARY KEY,
	TC_ID	VARCHAR2(100)		NOT NULL,
	CLASS_CODE	VARCHAR2(100)		NOT NULL,
	TITLE	VARCHAR2(100)		NOT NULL,
	CREATE_DATE	DATE		DEFAULT SYSDATE,
	BO_CONTENT	VARCHAR2(4000)		NOT NULL
);
COMMENT ON COLUMN PICTURE_BOARD.BO_NO IS '게시판번호';

COMMENT ON COLUMN PICTURE_BOARD.TC_ID IS '교직원아이디';

COMMENT ON COLUMN PICTURE_BOARD.CLASS_CODE IS '반코드';

COMMENT ON COLUMN PICTURE_BOARD.TITLE IS '제목';

COMMENT ON COLUMN PICTURE_BOARD.CREATE_DATE IS '작성일';

COMMENT ON COLUMN PICTURE_BOARD.BO_CONTENT IS '내용';


/*교사/학생채팅 테이블*/
CREATE TABLE CHAT (
	TC_ID	VARCHAR2(100)		,
	STU_ID	VARCHAR2(100)		NOT NULL,
	CH_DATE	DATE		DEFAULT SYSDATE,
	CH_CONTENT	VARCHAR2(4000)		NOT NULL,
	CLASS_CODE	VARCHAR2(100)	NOT NULL,
	SEND_MESSENGER		VARCHAR2(10) NOT NULL
);
COMMENT ON COLUMN CHAT.TC_ID IS '교직원아이디';

COMMENT ON COLUMN CHAT.STU_ID IS '학생아이디';

COMMENT ON COLUMN CHAT.CH_DATE IS '날짜';

COMMENT ON COLUMN CHAT.CH_CONTENT IS '내용';

COMMENT ON COLUMN CHAT.CLASS_CODE IS '반코드';

COMMENT ON COLUMN CHAT.SEND_MESSENGER IS '보내는사람(ST:학생/TC:선생님)';


/*학부모커뮤니티 테이블*/
CREATE TABLE PARENTS_BOARD (
	BO_NO	NUMBER	,
	CLASS_CODE	VARCHAR2(100)		NOT NULL,
	PR_ID	VARCHAR2(100)		NOT NULL,
	TITLE	VARCHAR2(100)		NOT NULL,
	BO_CONTENT	VARCHAR2(4000)	NOT NULL,
	CREATE_DATE	DATE		DEFAULT SYSDATE,
	BO_COUNT	NUMBER		DEFAULT 0,
	ORIGIN_NAME	VARCHAR2(2000),
	CHANGE_NAME	VARCHAR2(2000),
    PRIMARY KEY (BO_NO,CLASS_CODE)
);
COMMENT ON COLUMN PARENTS_BOARD.BO_NO IS '게시판번호';

COMMENT ON COLUMN PARENTS_BOARD.CLASS_CODE IS '반코드';

COMMENT ON COLUMN PARENTS_BOARD.PR_ID IS '학부모아이디';

COMMENT ON COLUMN PARENTS_BOARD.TITLE IS '제목';

COMMENT ON COLUMN PARENTS_BOARD.BO_CONTENT IS '내용';

COMMENT ON COLUMN PARENTS_BOARD.CREATE_DATE IS '작성일';

COMMENT ON COLUMN PARENTS_BOARD.BO_COUNT IS '조회수';

COMMENT ON COLUMN PARENTS_BOARD.ORIGIN_NAME IS '첨부파일원래이름';

COMMENT ON COLUMN PARENTS_BOARD.CHANGE_NAME IS '첨부파일바뀐이름';


/*학부모커뮤니티댓글 테이블*/
CREATE TABLE PARENTS_BOARD_REPLY (
	RE_NO	NUMBER	 PRIMARY KEY,
	BO_NO	NUMBER		NOT NULL,
	PR_ID	VARCHAR2(100)	NOT NULL,
	RE_CONTENT	VARCHAR2(4000)		NULL,
	CREATE_DATE 	DATE DEFAULT SYSDATE,
	PREP_NO	NUMBER		NULL
);
COMMENT ON COLUMN PARENTS_BOARD_REPLY.RE_NO IS '댓글번호';

COMMENT ON COLUMN PARENTS_BOARD_REPLY.BO_NO IS '게시판번호';

COMMENT ON COLUMN PARENTS_BOARD_REPLY.PR_ID IS '학부모아이디';

COMMENT ON COLUMN PARENTS_BOARD_REPLY.RE_CONTENT IS '내용';

COMMENT ON COLUMN PARENTS_BOARD_REPLY.CREATE_DATE IS '작성일';

COMMENT ON COLUMN PARENTS_BOARD_REPLY.PREP_NO IS '부모댓글번호';


/*학교리스트 테이블*/
CREATE TABLE SCHOOL_LIST (
	SC_CODE	VARCHAR2(100) PRIMARY KEY,
	SC_NAME	VARCHAR2(200),
	SC_ADDRESS	VARCHAR2(500),
	OE_CODE	VARCHAR2(50)
);
COMMENT ON COLUMN SCHOOL_LIST.SC_CODE IS '학교코드';

COMMENT ON COLUMN SCHOOL_LIST.SC_NAME IS '학교이름';

COMMENT ON COLUMN SCHOOL_LIST.SC_ADDRESS IS '학교주소';

COMMENT ON COLUMN SCHOOL_LIST.OE_CODE IS '교육청코드';


/*프로필사진 테이블*/
CREATE TABLE STU_PROFILE (
	PIC_NO	NUMBER	DEFAULT 1 PRIMARY KEY ,
	PIC_AD	VARCHAR2(4000)		NOT NULL
);
COMMENT ON COLUMN STU_PROFILE.PIC_NO IS '사진번호';

COMMENT ON COLUMN STU_PROFILE.PIC_AD IS '사진경로';

/*과목 테이블*/
CREATE TABLE SUBJECT(
    SUB VARCHAR2(100)
);
COMMENT ON COLUMN SUBJECT.SUB IS '과목';
INSERT INTO SUBJECT(SUB)
VALUES('국어');
INSERT INTO SUBJECT(SUB)
VALUES('수학');
INSERT INTO SUBJECT(SUB)
VALUES('영어');
INSERT INTO SUBJECT(SUB)
VALUES('과학');
INSERT INTO SUBJECT(SUB)
VALUES('사회');
INSERT INTO SUBJECT(SUB)
VALUES('미술');
INSERT INTO SUBJECT(SUB)
VALUES('체육');
COMMIT;

/*----------------------------------------------------------------*/
/*트리거*/

CREATE OR REPLACE TRIGGER TRG_HOMEWORK_BO_NO
BEFORE INSERT ON HOMEWORK
FOR EACH ROW
WHEN (NEW.BO_NO IS NULL)
BEGIN
    :NEW.BO_NO := SEQ_HOMEWORK_BOARD.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_PIC_BO_NO
BEFORE INSERT ON PICTURE_BOARD
FOR EACH ROW
WHEN (NEW.BO_NO IS NULL)
BEGIN
    :NEW.BO_NO := SEQ_PIC_BOARD.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_PARENTS_BO_NO
BEFORE INSERT ON PARENTS_BOARD
FOR EACH ROW
WHEN (NEW.BO_NO IS NULL)
BEGIN
    :NEW.BO_NO := SEQ_PARENTS_BOARD.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_AFTERSCHOOL_BO_NO
BEFORE INSERT ON AFTERSCHOOL_BOARD
FOR EACH ROW
WHEN (NEW.BO_NO IS NULL)
BEGIN
    :NEW.BO_NO := SEQ_AFTERSCHOOL_BOARD.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_REPLY_RE_NO
BEFORE INSERT ON PARENTS_BOARD_REPLY
FOR EACH ROW
WHEN (NEW.RE_NO IS NULL)
BEGIN
    :NEW.RE_NO := SEQ_REPLY.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_NOTCE_NO
BEFORE INSERT ON NOTICE
FOR EACH ROW
WHEN (NEW.NOTICE_NO IS NULL)
BEGIN
    :NEW.NOTICE_NO := SEQ_NOTICE.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_MEMO_NO
BEFORE INSERT ON MEMO
FOR EACH ROW
WHEN (NEW.MEMO_NO IS NULL)
BEGIN
    :NEW.MEMO_NO := SEQ_MEMO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_COUNSEL_NO
BEFORE INSERT ON COUNSEL
FOR EACH ROW
WHEN (NEW.CS_NO IS NULL)
BEGIN
    :NEW.CS_NO := SEQ_COUNSEL.NEXTVAL;
END;
/

/*----------------------------------------------------------------*/
/*
ALTER TABLE HM_SUBMIT ADD CONSTRAINT FK_STUDENT_TO_HM_SUBMIT_1 FOREIGN KEY (
	STU_ID
)
REFERENCES STUDENT (
	STU_ID
);

ALTER TABLE HM_SUBMIT ADD CONSTRAINT FK_HOMEWORK_TO_HM_SUBMIT_1 FOREIGN KEY (
	BO_NO
)
REFERENCES HOMEWORK (
	BO_NO
);

ALTER TABLE COUNSEL ADD CONSTRAINT FK_TEACHER_TO_COUNSEL_1 FOREIGN KEY (
	TC_ID
)
REFERENCES TEACHER (
	TC_ID
);

ALTER TABLE AFTERSCHOOL_STUDENT ADD CONSTRAINT FK_STUDENT_TO_AFTERSCHOOL_STUDENT_1 FOREIGN KEY (
	STU_ID
)
REFERENCES STUDENT (
	STU_ID
);

ALTER TABLE AFTERSCHOOL_STUDENT ADD CONSTRAINT FK_AFTERSCHOOL_TO_AFTERSCHOOL_STUDENT_1 FOREIGN KEY (
	CODE
)
REFERENCES AFTERSCHOOL (
	CODE
);

ALTER TABLE ATTENDANCE ADD CONSTRAINT FK_STUDENT_TO_ATTENDANCE_1 FOREIGN KEY (
	STU_ID
)
REFERENCES STUDENT (
	STU_ID
);

ALTER TABLE PARENTS_BOARD ADD CONSTRAINT FK_TEACHER_TO_PARENTS_BOARD_1 FOREIGN KEY (
	CLASS_CODE
)
REFERENCES TEACHER (
	CLASS_CODE
);

ALTER TABLE PICTURE_BOARD_PICTURE ADD CONSTRAINT FK_PITURE_BOARD_TO_PICTURE_BOARD_PICTURE_1 FOREIGN KEY (
	BO_NO
)
REFERENCES PITURE_BOARD (
	BO_NO
);

ALTER TABLE HOMEWORK_PICTURE ADD CONSTRAINT FK_HOMEWORK_TO_HOMEWORK_PICTURE_1 FOREIGN KEY (
	BO_NO
)
REFERENCES HOMEWORK (
	BO_NO
);

ALTER TABLE PARENTS_BOARD_PICTURE ADD CONSTRAINT FK_PARENTS_BOARD_TO_PARENTS_BOARD_PICTURE_1 FOREIGN KEY (
	BO_NO
)
REFERENCES PARENTS_BOARD (
	BO_NO
);

ALTER TABLE AFTERSCHOOL_BOARD_PICTURE ADD CONSTRAINT FK_AFTERSCHOOL_BOARD_TO FOREIGN KEY (
	BO_NO
)
REFERENCES AFTERSCHOOL_BOARD (
	BO_NO
);

ALTER TABLE HOMEWORK_FILE ADD CONSTRAINT FK_HOMEWORK_TO_HOMEWORK_FILE_1 FOREIGN KEY (
	BO_NO
)
REFERENCES HOMEWORK (
	BO_NO
);

ALTER TABLE HM_SUBMIT_FILE ADD CONSTRAINT FK_HM_SUBMIT_TO_HM_SUBMIT_FILE_1 FOREIGN KEY (
	STU_ID
)
REFERENCES HM_SUBMIT (
	STU_ID
);

ALTER TABLE HM_SUBMIT_FILE ADD CONSTRAINT FK_HM_SUBMIT_TO_HM_SUBMIT_FILE_2 FOREIGN KEY (
	BO_NO
)
REFERENCES HM_SUBMIT (
	BO_NO
);

ALTER TABLE AFTERSCHOOL_BOARD_FILE ADD CONSTRAINT FK_AFTERSCHOOL_BOARD_T FOREIGN KEY (
	BO_NO
)
REFERENCES AFTERSCHOOL_BOARD (
	BO_NO
);
*/

